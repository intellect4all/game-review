// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "autolarry55@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/account/forgot-password/init/{email}": {
            "post": {
                "description": "An otp code is sent to the email if the user account existed.\nAn otp ID is returned, which must submitted alongside the otpCode sent to the mail to the Forgot password reset endpoint.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Forget password endpoint",
                "operationId": "ForgotPasswordInit",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email address",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/main.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/authentication.OTPCreationSuccessResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "No Account Found",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    }
                }
            }
        },
        "/api/v1/account/forgot-password/resend/{email}": {
            "post": {
                "description": "An otp code is sent to the email if the user account existed.\nAn otp ID is returned, which must submitted alongside the otpCode sent to the mail to the Forgot password reset endpoint.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Resend OTP code for Forget password",
                "operationId": "ResendForgetPasswordCode",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email address",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/main.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/authentication.OTPCreationSuccessResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "No Account Found",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    }
                }
            }
        },
        "/api/v1/account/forgot-password/reset": {
            "post": {
                "description": "The Endpoint resets the user password using the otp code sent to the user's email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Complete Forget password reset",
                "operationId": "ResetPassword",
                "parameters": [
                    {
                        "description": "OtpID data",
                        "name": "ForgetAndResetPasswordRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authentication.ForgetAndResetPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/main.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    },
                    "404": {
                        "description": "No Account Found",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    },
                    "409": {
                        "description": "User already verified",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    }
                }
            }
        },
        "/api/v1/account/init-verification/{email}": {
            "post": {
                "description": "An otp code is sent to the email if the user account existed.\nAn otp ID is returned, which must submitted alongside the otpCode sent to the mail to the VerifyAccount endpoint.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Initiate user email verification",
                "operationId": "initVerifyAccount",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email address",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/main.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/authentication.OTPCreationSuccessResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "No Account Found",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    },
                    "409": {
                        "description": "User already verified",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    }
                }
            }
        },
        "/api/v1/account/login": {
            "post": {
                "description": "Returns a signed JSON Web Token that can be used to talk to secured endpoints",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Login endpoint for all users",
                "operationId": "login",
                "parameters": [
                    {
                        "description": "login request",
                        "name": "loginRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authentication.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/main.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/authentication.LoginDTO"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    },
                    "426": {
                        "description": "Account is inactive",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    }
                }
            }
        },
        "/api/v1/account/signup": {
            "post": {
                "description": "Creates a new User/Moderator on the system. The Moderator will need to be manually activated by an existing admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Signup endpoint for all users and moderators",
                "operationId": "signup",
                "parameters": [
                    {
                        "description": "signup request",
                        "name": "signUpRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authentication.SignUpRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/main.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "207": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/main.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    },
                    "409": {
                        "description": "User already exists",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    }
                }
            }
        },
        "/api/v1/account/verify-email": {
            "post": {
                "description": "The Endpoint verifies the user account using the otp code sent to the user's email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Complete account verification",
                "operationId": "VerifyAccount",
                "parameters": [
                    {
                        "description": "OtpID data",
                        "name": "verifyAccountRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authentication.VerifyAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/main.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    },
                    "404": {
                        "description": "No Account Found",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    },
                    "409": {
                        "description": "User already verified",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    }
                }
            }
        },
        "/api/v1/account/verify-email/resend/{email}": {
            "post": {
                "description": "An otp code is sent to the email if the user account existed.\nAn otp ID is returned, which must submitted alongside the otpCode sent to the mail to the VerifyAccount endpoint.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Resend OTP code for account verification",
                "operationId": "ResendVerificationCode",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email address",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/main.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/authentication.OTPCreationSuccessResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "No Account Found",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    },
                    "409": {
                        "description": "User already verified",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    }
                }
            }
        },
        "/api/v1/games": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Gets all games, limits and offset can be used to paginate the results",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "Gets all games",
                "operationId": "getGames",
                "parameters": [
                    {
                        "type": "string",
                        "name": "developer",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "genre",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "publisher",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "released_date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/main.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/games.PaginatedResponse-games_Game"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/games/add": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Adds a new game genre",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "Adds a new game",
                "operationId": "addGame",
                "parameters": [
                    {
                        "description": "addGame request",
                        "name": "addGenre",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/games.AddGameRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/main.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/games.AddGameRes"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "409": {
                        "description": "Game already exists",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    }
                }
            }
        },
        "/api/v1/games/genres": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Gets all game genres, limits and offset can be used to paginate the results",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "Gets all game genres",
                "operationId": "getGenres",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/main.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/games.PaginatedResponse-games_GameGenre"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/games/genres/add": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Adds a new game genre, the slug is generated from the title, and it must be unique",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "Adds a new game genre",
                "operationId": "addGenre",
                "parameters": [
                    {
                        "description": "addGenre request",
                        "name": "addGenre",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/games.AddGenreRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/main.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/games.AddGenreRes"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "409": {
                        "description": "Genre with the same slug already exists",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    }
                }
            }
        },
        "/api/v1/games/genres/update": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates a game genre, the slug is required",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "Updates a game genre",
                "operationId": "updateGenre",
                "parameters": [
                    {
                        "description": "updateGenre request",
                        "name": "updateGenre",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/games.EditGenreRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/main.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Genre not found",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    }
                }
            }
        },
        "/api/v1/games/genres/{slug}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "the slug is required",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "Gets a game genre",
                "operationId": "getGenre",
                "parameters": [
                    {
                        "type": "string",
                        "description": "slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/main.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/games.GameGenre"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "the slug is required",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "Delete a game genre",
                "operationId": "deleteGenre",
                "parameters": [
                    {
                        "type": "string",
                        "description": "slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/main.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Genre not found",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    }
                }
            }
        },
        "/api/v1/games/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "the slug is required",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "Gets a game",
                "operationId": "getGame",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/main.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/games.Game"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "the id is required",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "Updates a game",
                "operationId": "updateGame",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "updateGame request",
                        "name": "updateGame",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/games.UpdateGameRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/main.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Game not found",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "the id is required",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "Delete a game",
                "operationId": "deleteGame",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/main.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Game not found",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    }
                }
            }
        },
        "/api/v1/ping": {
            "get": {
                "description": "get the status of server.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ping"
                ],
                "summary": "Show the status of server.",
                "operationId": "ping",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/reviews/add": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a review",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reviews"
                ],
                "summary": "Add a review",
                "operationId": "addReview",
                "parameters": [
                    {
                        "description": "addReview request",
                        "name": "addReview",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/reviews.AddReviewRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/main.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/reviews.AddReviewRes"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    },
                    "404": {
                        "description": "Game not found",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    },
                    "409": {
                        "description": "Review already exists",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    }
                }
            }
        },
        "/api/v1/reviews/flagged": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get flagged reviews",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reviews"
                ],
                "summary": "Get flagged reviews",
                "operationId": "getFlaggedReviews",
                "parameters": [
                    {
                        "type": "string",
                        "name": "gameId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/main.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/reviews.PaginatedResponse-reviews_Review"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    }
                }
            }
        },
        "/api/v1/reviews/game/{gameId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get reviews for a game",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reviews"
                ],
                "summary": "Get reviews for a game",
                "operationId": "getReviewsForGame",
                "parameters": [
                    {
                        "type": "string",
                        "name": "gameId",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 0,
                        "type": "integer",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "userId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "game id",
                        "name": "gameId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/main.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/reviews.PaginatedResponse-reviews_ReviewResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    },
                    "404": {
                        "description": "Game not found",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    }
                }
            }
        },
        "/api/v1/reviews/locations": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get reviews locations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reviews"
                ],
                "summary": "Get reviews locations",
                "operationId": "getReviewsLocations",
                "parameters": [
                    {
                        "enum": [
                            "day",
                            "week",
                            "month"
                        ],
                        "type": "string",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "value",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/main.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/reviews.LocationWithCount"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    }
                }
            }
        },
        "/api/v1/reviews/user/{userId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all reviews for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reviews"
                ],
                "summary": "Get all reviews for a user",
                "operationId": "getReviewsForUser",
                "parameters": [
                    {
                        "description": "getGameReviews request",
                        "name": "getGameReviews",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/reviews.GetReviewsForGame"
                        }
                    },
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/main.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/reviews.PaginatedResponse-reviews_ReviewResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    }
                }
            }
        },
        "/api/v1/reviews/{reviewId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a review",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reviews"
                ],
                "summary": "Get a review",
                "operationId": "getReview",
                "parameters": [
                    {
                        "type": "string",
                        "description": "review id",
                        "name": "reviewId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/main.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/reviews.ReviewResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    },
                    "404": {
                        "description": "Review not found",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update a review",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reviews"
                ],
                "summary": "Update a review",
                "operationId": "updateReview",
                "parameters": [
                    {
                        "description": "update review request",
                        "name": "addReview",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/reviews.AddReviewRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "review id",
                        "name": "reviewId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/main.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/reviews.AddReviewRes"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    },
                    "404": {
                        "description": "Review not found",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a review",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reviews"
                ],
                "summary": "Delete a review",
                "operationId": "deleteReview",
                "parameters": [
                    {
                        "type": "string",
                        "description": "review id",
                        "name": "reviewId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/main.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/reviews.AddReviewRes"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    },
                    "404": {
                        "description": "Review not found",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    }
                }
            }
        },
        "/api/v1/reviews/{reviewId}/downvote": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Upvote a review",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reviews"
                ],
                "summary": "Upvote a review",
                "operationId": "downvoteReview",
                "parameters": [
                    {
                        "type": "string",
                        "description": "review id",
                        "name": "reviewId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/main.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    },
                    "404": {
                        "description": "Review not found",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    }
                }
            }
        },
        "/api/v1/reviews/{reviewId}/flag": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Flag a review",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reviews"
                ],
                "summary": "Flag a review",
                "operationId": "flagReview",
                "parameters": [
                    {
                        "type": "string",
                        "description": "review id",
                        "name": "reviewId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/main.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    },
                    "404": {
                        "description": "Review not found",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    }
                }
            }
        },
        "/api/v1/reviews/{reviewId}/unflag": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "unflag a review",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reviews"
                ],
                "summary": "unflag a review",
                "operationId": "unflagReview",
                "parameters": [
                    {
                        "type": "string",
                        "description": "review id",
                        "name": "reviewId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/main.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    },
                    "404": {
                        "description": "Review not found",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    }
                }
            }
        },
        "/api/v1/reviews/{reviewId}/upvote": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Upvote a review",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reviews"
                ],
                "summary": "Upvote a review",
                "operationId": "upvoteReview",
                "parameters": [
                    {
                        "type": "string",
                        "description": "review id",
                        "name": "reviewId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/main.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    },
                    "404": {
                        "description": "Review not found",
                        "schema": {
                            "$ref": "#/definitions/main.JSONErrorRes"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "authentication.ForgetAndResetPasswordRequest": {
            "type": "object",
            "required": [
                "confirmPassword",
                "email",
                "otpCode",
                "password",
                "tokenId"
            ],
            "properties": {
                "confirmPassword": {
                    "type": "string",
                    "minLength": 8
                },
                "email": {
                    "type": "string"
                },
                "otpCode": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "tokenId": {
                    "type": "string"
                }
            }
        },
        "authentication.Location": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                }
            }
        },
        "authentication.LoginDTO": {
            "type": "object",
            "properties": {
                "jwt": {
                    "type": "string"
                },
                "userDetails": {
                    "$ref": "#/definitions/authentication.UserDetail"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "authentication.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "authentication.OTPCreationSuccessResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "otpId": {
                    "type": "string"
                }
            }
        },
        "authentication.SignUpRequest": {
            "type": "object",
            "required": [
                "email",
                "firstName",
                "lastName",
                "location",
                "password",
                "phone",
                "role",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/authentication.Location"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "user",
                        "moderator"
                    ]
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "authentication.UserDetail": {
            "type": "object",
            "required": [
                "email",
                "firstName",
                "isVerified",
                "lastName",
                "role",
                "username"
            ],
            "properties": {
                "displayPic": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "isVerified": {
                    "type": "boolean"
                },
                "lastName": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/authentication.Location"
                },
                "phone": {
                    "type": "string"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "user",
                        "admin",
                        "moderator"
                    ]
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "authentication.VerifyAccountRequest": {
            "type": "object",
            "required": [
                "email",
                "otpCode",
                "tokenID"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "otpCode": {
                    "type": "string"
                },
                "tokenID": {
                    "type": "string"
                }
            }
        },
        "games.AddGameRequest": {
            "type": "object",
            "required": [
                "developer",
                "genres",
                "image",
                "publisher",
                "releaseDate",
                "summary",
                "title"
            ],
            "properties": {
                "developer": {
                    "type": "string"
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/games.EmbeddedGameGenre"
                    }
                },
                "image": {
                    "type": "string"
                },
                "publisher": {
                    "type": "string"
                },
                "releaseDate": {
                    "type": "integer"
                },
                "summary": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "games.AddGameRes": {
            "type": "object"
        },
        "games.AddGenreRequest": {
            "type": "object",
            "required": [
                "desc",
                "title"
            ],
            "properties": {
                "desc": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "games.AddGenreRes": {
            "type": "object",
            "properties": {
                "slug": {
                    "type": "string"
                }
            }
        },
        "games.EditGenreRequest": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "games.EmbeddedGameGenre": {
            "type": "object",
            "properties": {
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "games.Game": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "developer": {
                    "type": "string"
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/games.EmbeddedGameGenre"
                    }
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "isDeleted": {
                    "type": "boolean"
                },
                "publisher": {
                    "type": "string"
                },
                "rating": {
                    "$ref": "#/definitions/games.RatingStats"
                },
                "releaseDate": {
                    "type": "integer"
                },
                "summary": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "games.GameGenre": {
            "type": "object",
            "required": [
                "desc",
                "slug",
                "title"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "isDeleted": {
                    "type": "boolean"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "games.PaginatedResponse-games_Game": {
            "type": "object",
            "properties": {
                "currentPage": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/games.Game"
                    }
                },
                "hasMore": {
                    "type": "boolean"
                },
                "itemsPerPage": {
                    "type": "integer"
                },
                "totalItems": {
                    "type": "integer"
                },
                "totalPages": {
                    "type": "integer"
                }
            }
        },
        "games.PaginatedResponse-games_GameGenre": {
            "type": "object",
            "properties": {
                "currentPage": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/games.GameGenre"
                    }
                },
                "hasMore": {
                    "type": "boolean"
                },
                "itemsPerPage": {
                    "type": "integer"
                },
                "totalItems": {
                    "type": "integer"
                },
                "totalPages": {
                    "type": "integer"
                }
            }
        },
        "games.RatingStats": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "sum": {
                    "type": "integer"
                }
            }
        },
        "games.UpdateGameRequest": {
            "type": "object",
            "required": [
                "image"
            ],
            "properties": {
                "developer": {
                    "type": "string"
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/games.EmbeddedGameGenre"
                    }
                },
                "image": {
                    "type": "string"
                },
                "publisher": {
                    "type": "string"
                },
                "releaseDate": {
                    "type": "integer"
                },
                "summary": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "main.JSONErrorRes": {
            "type": "object",
            "properties": {
                "error": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "main.JSONResult": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "reviews.AddReviewRequest": {
            "type": "object",
            "required": [
                "comment",
                "gameId",
                "location",
                "rating"
            ],
            "properties": {
                "comment": {
                    "type": "string",
                    "maxLength": 2000,
                    "minLength": 5
                },
                "gameId": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/reviews.Location"
                },
                "rating": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "reviews.AddReviewRes": {
            "type": "object",
            "properties": {
                "reviewId": {
                    "type": "string"
                }
            }
        },
        "reviews.GetReviewsForGame": {
            "type": "object",
            "required": [
                "limit",
                "offset"
            ],
            "properties": {
                "gameId": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 0
                },
                "offset": {
                    "type": "integer",
                    "minimum": 0
                },
                "sortBy": {
                    "$ref": "#/definitions/reviews.Sort"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "reviews.LatLng": {
            "type": "object",
            "properties": {
                "lat": {
                    "type": "number"
                },
                "lng": {
                    "type": "number"
                }
            }
        },
        "reviews.Location": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                }
            }
        },
        "reviews.LocationWithCount": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "location": {
                    "$ref": "#/definitions/reviews.LatLng"
                }
            }
        },
        "reviews.PaginatedResponse-reviews_Review": {
            "type": "object",
            "properties": {
                "currentPage": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/reviews.Review"
                    }
                },
                "hasMore": {
                    "type": "boolean"
                },
                "itemsPerPage": {
                    "type": "integer"
                },
                "totalItems": {
                    "type": "integer"
                },
                "totalPages": {
                    "type": "integer"
                }
            }
        },
        "reviews.PaginatedResponse-reviews_ReviewResponse": {
            "type": "object",
            "properties": {
                "currentPage": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/reviews.ReviewResponse"
                    }
                },
                "hasMore": {
                    "type": "boolean"
                },
                "itemsPerPage": {
                    "type": "integer"
                },
                "totalItems": {
                    "type": "integer"
                },
                "totalPages": {
                    "type": "integer"
                }
            }
        },
        "reviews.Review": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "gameId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isDeleted": {
                    "type": "boolean"
                },
                "isFlagged": {
                    "type": "boolean"
                },
                "lastUpdatedAt": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/reviews.Location"
                },
                "rating": {
                    "type": "integer"
                },
                "userId": {
                    "type": "string"
                },
                "votes": {
                    "type": "integer"
                }
            }
        },
        "reviews.ReviewResponse": {
            "type": "object",
            "properties": {
                "review": {
                    "$ref": "#/definitions/reviews.Review"
                },
                "user": {
                    "$ref": "#/definitions/reviews.User"
                },
                "vote": {
                    "$ref": "#/definitions/reviews.Vote"
                }
            }
        },
        "reviews.Sort": {
            "type": "object",
            "properties": {
                "asc": {
                    "type": "boolean"
                },
                "sortKey": {
                    "type": "string"
                }
            }
        },
        "reviews.User": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/reviews.Location"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "reviews.Vote": {
            "type": "object",
            "properties": {
                "isDownVote": {
                    "type": "boolean"
                },
                "isUpVote": {
                    "type": "boolean"
                },
                "reviewId": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{"http", "https"},
	Title:            "Game Review API",
	Description:      "This is an Api AuthService for Cool Game Review Api.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
